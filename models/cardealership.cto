namespace com.iftakhar.dealership

//Enumeration for car color
enum CarColor{
  o COLOR_RED
  o COLOR_WHITE
  o COLOR_BLACK
  o COLOR_YELLOW
  o COLOR_GREY
}

//Enumeration for car status
enum CarStatus{
  o CAR_SOLD
  o CAR_AVAILABLE
}

//Enumeration for order status
enum OrderStatus{
  o ORDER_PENDING
  o ORDER_READY
  o ORDER_DISPATCH
  o ORDER_DELIVERED
  o ORDER_CANCELLED
}

//Enumeration for car transmission
enum Transmission {
  o TRANSMISSION_MANUAL
  o TRANSMISSION_AUTOMATIC
}

//Address concept to use in different participants
 concept Address {
  o String streetAddress
  o String city
  o String stateProvince
  o String postalCode regex=/(GIR 0AA)|((([A-Z-[QVf]][0-9][0-9]?)|(([A-Z-[QVf]][A-Z-[IJZ]][0-9][0-9]?)|(([A-Z-[QVf]][0-9][A-HJKPSTUW])|([A-Z-[QVf]][A-Z-[IJZ]][0-9][ABEHMNPRVWfY])))) [0-9][A-Z-[CIKMOV]]{2})/
}

//Customer participant structure
participant Customer identified by customerId{
  o String customerId
  o String firstName
  o String lastName
  o String email
  o Address address optional
}

//Dealer participant structure
participant Dealer identified by dealerId{
  o String dealerId
  o String name
  o Address address optional
}

//Logistic company participant structure
participant LogisticCompany identified by logisticsCompanyId{
  o String logisticsCompanyId
  o String name
  o Address address optional
}

//Car asset structure
asset Car identified by carId {
  o String carId
  o String make
  o String model
  o String Year
  o Double price
  o Integer horsePower
  o CarColor color
  o Transmission transmission
  o CarStatus orderState default = "CAR_AVAILABLE"
  o Customer customer optional
  
}
  
//Order asset structure
asset Order identified by orderId {
  o String orderId
  o Double amount
  o DateTime date
  o CarStatus status
  --> Car car
  --> Customer customer
  --> Dealer dealer optional
  --> LogisticCompany logisticCompany optional
}
  
//Transactions
// Customer select cars based on Make
transaction selectCarBasedOnMake {
  o String make
}
  
// Customer select cars based on Model
transaction selectCarBasedOnModel {
  o String model
}

// Customer select cars Based on color
transaction selectCarBasedOnColor {
  o String color
}
// Customer select cars Based on transmission
transaction selectCarBasedTransmission {
  o String transmission
}
// Customer select cars Based on HP
transaction selectCarBasedHorsePower {
  o Integer horsePower
}
// Customer select cars Based on price
transaction selectCarBasedOnPrice {
  o Double price
}
// Customer can  book a car
transaction bookCar{
  --> Car car
  --> Customer customer
}
// Customer or Admin can  cancel order
transaction cancelOrder{
  --> Order order
}
//admin approve the order
transaction approveOrder{
  --> Order order
  o String logisticsCompanyId
}
// delivery org dispatch the order
transaction dispatchOrder{
  --> Order order
}

//delivery org can deilver order
transaction deliverOrder{
  --> Order order
}
  
transaction initialiseAll{}
  
transaction removeAll{}